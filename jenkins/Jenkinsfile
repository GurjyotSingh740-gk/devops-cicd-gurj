pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = "devops-app"
        APP_PORT = "8081"
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                echo 'üì• Checking out code from Git...'
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                echo 'üê≥ Building Docker image...'
                dir('app') {
                    script {
                        bat 'docker build -t %DOCKER_IMAGE%:latest .'
                    }
                }
            }
        }
        
        stage('Terraform Init') {
            steps {
                echo 'üîß Initializing Terraform...'
                dir('terraform') {
                    bat 'terraform init'
                }
            }
        }
        
        stage('Terraform Plan') {
            steps {
                echo 'üìã Planning infrastructure...'
                dir('terraform') {
                    bat 'terraform plan -var="environment=dev" -var="app_port=%APP_PORT%"'
                }
            }
        }
        
        stage('Terraform Apply') {
            steps {
                echo 'üöÄ Deploying infrastructure...'
                dir('terraform') {
                    bat 'terraform apply -auto-approve -var="environment=dev" -var="app_port=%APP_PORT%"'
                }
            }
        }
        
        stage('Verify Deployment') {
            steps {
                echo '‚úÖ Verifying deployment...'
                bat 'docker ps'
                echo "Application running at: http://localhost:%APP_PORT%"
            }
        }

        // New stage added below for DockerHub push
        stage('Docker Login & Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${env.DOCKER_CREDS}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    bat 'docker logout'
                    bat 'echo %PASSWORD% | docker login -u %USERNAME% --password-stdin'
                    bat "docker tag %DOCKER_IMAGE%:latest %IMAGE_NAME%:%IMAGE_TAG%"
                    bat "docker push %IMAGE_NAME%:%IMAGE_TAG%"
                }
            }
        }
    }
    
    post {
        success {
            echo '‚úÖ Pipeline completed successfully!'
        }
        failure {
            echo '‚ùå Pipeline failed!'
        }
    }
}
